name: "Test Release Publisher"

on:
  pull_request:
    branches:
      - main

jobs:
  test_release_publisher:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    # Simulate the `fetch_release.py` script outputs by directly setting environment variables
    - name: Mock fetch-release outputs
      # TODO Parametrize all these and check results
      #run: |
        #echo "MICROMAMBA_NEW_VERSION=true" >> $GITHUB_ENV
        #echo "MICROMAMBA_VERSION=1.1.0" >> $GITHUB_ENV
        #echo "MICROMAMBA_NEW_PRERELEASE=false" >> $GITHUB_ENV
        #echo "MICROMAMBA_LATEST=false" >> $GITHUB_ENV

    #- name: Fake GitHub release
      #uses: softprops/action-gh-release@v2.2.0
      #if: env.MICROMAMBA_NEW_VERSION == 'true'
      #with:
        #name: Fake release
        ## TODO use a PAT with write rights instead?
        #token: ${{ secrets.GITHUB_TOKEN }}
        ## Set 'draft' to true for testing
        #draft: true
        #prerelease: ${{ env.MICROMAMBA_NEW_PRERELEASE == 'true' }}
        #make_latest: ${{ env.MICROMAMBA_LATEST }}
        #body: |
          #Fake release for micromamba
        #tag_name: ${{ env.MICROMAMBA_VERSION }}
        #files: |
          #releases/*
    ## TODO cleanup/remove the draft releases (once/twice a week?)
